00:0.04 Let's say, I just want a little bit of free form exploration of python.
00:3.8 Maybe some of the code that I'm writing or something about a package that I'm working
00:7.75 with, one of the real common ways to do this is go over here and
00:11.18 open up the python. REPL
00:13.44 The REPL is the Read Evaluate,
00:15.04 Print Loop. That's what you get when you type Python 3 and you know,
00:19.13 you get standard stuff over here,
00:21.05 you get a little bit of help.
00:22.56 Like we could come along and say create a variable called abc and then maybe we
00:28.87 could make some changes to it.
00:33.34 We come down and we could hit not if we hit it a few times,
00:37.42 hit half a few times. We do get some help,
00:39.95 but it's not like I can arrow back and select these.
00:42.61 I can come over here and say is alpha,
00:45.84 it's still an auto completed. Here we go.
00:49.01 Finally. Okay. Yes, it's alpha numeric.
00:51.06 . Cool. So this is good.
00:53.44 But what if I want to work with my code from the project that I'm trying
00:57.53 to explore? Well, I got to make sure I'm in the right directory and
01:1.38 oh, by the way, I'm gonna make sure I use the right python,
01:5.34 but that's the wrong python, that's not the one from the virtual environment.
01:8.54 Well, this is okay. It is far from ideal.
01:13.55 PyCharm has some really cool features.
01:15.22 It has the same basic idea with way more things pre configured in a lot more
01:20.26 help along the way and that's the python console here,
01:24.24 just make that big. So if we do a quick little line wrap notice first
01:29.05 of all that is running the python out of the projects virtual environment.
01:33.27 So it's the right python that has the packages that we've pip installed right over here
01:38.08 You can see all the various packages like requests and what not that we may
01:44.28 be working with. So those are all available to us moreover,
01:48.54 we were down here, there's a couple of things that we've already set a source
01:52.6 roots. So let's go and make this podcast one also a source root and you
01:56.94 quick relaunch. Now we can see our podcast is part of the source root.
02:2.94 Okay, so that's a big bonus.
02:5.54 Come down here and do the same thing abc but now notice I have all sorts
02:12.67 of auto complete. So if I want to ask is alpha,
02:15.13 numeric, yep. There it is and it gives you all the help.
02:19.37 So if I go over here say join and I can hit show parameter info and
02:24.09 it'll actually show us all the arguments.
02:26.62 Though maybe that doesn't really make any sense.
02:28.31 But you can see that we have our various variables over here,
02:32.34 we can go even a little bit to de-bugger style here and set the value.
02:36.12 Like this is a 'new val' and if we print out 'var' again there's a value
02:41.84 So if you think you might be tempted to open up the python,
02:46.27 REPL. You definitely should get in the habit of working here,
02:49.84 let's do one more thing real quick because in our podcast folder over here we have
02:53.83 this service, we can just say import service.
02:57.44 I noticed we get auto complete for that and then we go to our service and
03:2.13 say dot this is all the stuff that we were working on in that podcast demo
03:6.21 how cool is that? So remember we had to download information,
03:9.73 we could ask things about, you know,
03:11.58 what is the max episode IDE.
03:13.47  And whatnot. So we come over here and say download that.
03:16.75 Actually went out to talk python and python but it's one of the two and downloaded
03:21.49 it. And then we could say um num is something like this num= service.get_max_episode_in( ).
03:26.99 What is the number 329.
03:31.67 And then we could get information about it.
03:34.74 Look how much easier this is.
03:35.92 All right. 329. And there's the whole episode of the title and whatnot.
03:42.84 You can see the variables that were coming up with here.
03:45.12 Like if we had stored that into a variable,
03:49.34 we could see, you know,
03:50.46 go over here and explore it.
03:51.92 We also have what's called special variables.
03:54.09 These are like the Dunder things Dunder,
03:56.32 name, Dunder file and so on,
03:57.52 but also the module we imported.
03:58.98 So for example, here's all the episodes that we've downloaded,
04:3.64 what we did. The download info.
04:5.35 Hopefully you see how valuable this is and how much of a butter experience it is
04:9.25 Then just typing python, especially if you want to work with specifically your code
04:13.79 your environment, your packages.
04:15.87 So be sure to make good use of this.
