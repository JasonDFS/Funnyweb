00:0.14 I'd like to dispel a myth around IDE's.
00:2.17  That they're slow.
00:4.34 You might think well these are heavyweight applications.
00:7.61 They take a lot of RAM.
00:8.89 They take a lot of disk space,
00:10.27 they're going to start slow. They're going to be the sluggish things,
00:13.38 man. Just give me some Emacs,
00:14.95 that thing starts up like that and it just flies. Well.
00:19.14 Yes. In some way starting a program that is large,
00:22.2 like an IDE from scratch that does take a little bit of time
00:24.59 Something like Emacs that just runs in a terminal probably starts faster.
00:29.34 But when you say something is slow and something is fast,
00:32.11 you've got to identify what you're making fast and what you're making slow.
00:36.54 I think with these very lightweight tools that start super fast.
00:39.55 Yeah, the program starts fast but then you work slowly and with less understanding and
00:44.8 less support throughout the rest of your day.
00:48.04 On the other hand, Richer tools like PyCharm and to be honest 
00:51.43 VS code in terms of its speed of starting start slower but then for the
00:55.51 rest of the time for the other seven hours,
00:58.33 59 minutes and 55 seconds after that brief five second startup,
01:2.76 you have something that is actually faster because it helps you work much much faster.
01:7.77 So what do you want to optimize?
01:9.34 I would think you want to optimize your speed,
01:11.75 not your applications at speed. Another one is that because these programs are heavyweight,
01:17.39 they might use a lot of energy and if you're on battery or if you're on
01:21.0 a very wimpy system, Maybe you don't want that if you're at a coffee shop
01:24.57 or an airplane, you're down to your last 10% of battery.
01:28.44 Maybe you don't want to run a program that's going to do a lot of indexing
01:31.7 and analysis in the background. So let's jump over to my Mac real quick and address
01:36.18 both of these. Here we are in PyCharm and I've already loaded it up
01:39.44 but I don't have any projects open
01:40.99  Files. Projects. Remember here's a project that we're going to use during the
01:45.77 editor chapter. We're going to do some code with me,
01:48.09 which is super fun. When do that with brian Hawkins.
01:50.46 I want to open up this project.
01:53.24 How long will it take? Because the audio editing you probably won't hear the click
01:57.42 and so I'm gonna do a countdown.
01:58.69 I'll go 321 go. And then I want to say,
02:1.25 go, I'll try to click at that very exact moment.
02:4.14 Alright, here we go. 321 go.
02:7.74 How long did that take? 300 milliseconds.
02:10.04 350. I don't know. I didn't time it exactly,
02:12.37 but wow. Was that fast.
02:13.97 Let's do it again. 321 Go.
02:18.04 Yeah. That doesn't feel like a program that slow or painful to work with.
02:21.43 To me, that looks incredibly fast actually.
02:23.99 Right. So, yeah, you gotta wait the five seconds for the app to
02:26.75 start up maybe. But then for the rest of your day,
02:29.17 it is a blazing vast experience.
02:30.73 Just like all the others. All right.
02:32.27 So, I really don't think that this idea that this larger program is slow.
02:36.36 It has any merit, especially once you think about the trade off of getting all
02:41.0 of the support of the tool gives you. Second is if you are under your last
02:45.44 10% and all that indexing analysis is actually putting a hurt on your computer,
02:50.3 what can you do? Well,
02:51.74 there's this thing called power save mode and I could go to file and click it
02:55.03 But it's cool to just use the little help search.
02:56.98 Here's all type power and it'll show me all the things that have to do with
02:59.6 power here in the menu and check that out in power save mode.
03:3.48 If I go and I click that,
03:4.89 it's going to turn off some of the analysis and some of the indexing and use
03:9.31 less power less battery and so on.
03:12.44 So if you're in a super limited environment or you're down trying to squeeze that last
03:15.66 bit of battery out. You can also use power save mode and this application won't
03:19.92 take nearly as much. There you have it.
03:22.77 That's my case. The IDE's.
03:23.78  are actually faster because they make the developer faster without too much overhead
