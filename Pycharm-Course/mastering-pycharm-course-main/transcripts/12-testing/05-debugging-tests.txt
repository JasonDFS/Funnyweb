00:0.14 I made a slight change to our failing tests so that it will actually pass,
00:4.44 go back and change this less than two greater than if you'd like to see it
00:7.72 fail. I just want to make sure we can have all of our tests for
00:10.31 this project passing. But I also made it use a random number here.
00:14.71 Why is that? Because I want to actually show you the ability to debug it
00:17.96 Like what if we need to know what is going on in this test.
00:21.94 Normally you might just run pytest from the CLI or something like that.
00:26.86 I would like to know exactly what is happening here so we can do a couple
00:31.37 of things. First notice that we can just run individual tests by right there by
00:35.38 clicking it. I could say run this will actually create a nude run configuration up
00:40.6 there. I could equally run this one and look the test,
00:45.03 change the fails passing. But if I put a breakpoint here,
00:48.37 I can click the debug there,
00:51.34 I can go over in this and click the debug there.
00:53.64 Or I can just click the debug here.
00:55.45 Once I have it running either the individual or all of them And we go and
01:1.2 look at that right now. Number is 179.
01:5.04 So if you want to focus in and actually debug these things,
01:8.97 we already saw how awesome the PyCharm debugger is.
01:12.41 Well there's a super easy way to figure out why your test might be failing. Set a break point.
