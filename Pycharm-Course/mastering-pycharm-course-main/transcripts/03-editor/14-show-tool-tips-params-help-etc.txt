00:0.0 We've seen some ways that PyCharm helps us understand the code that we're working with
00:4.18 even without navigating to it or to the documentation.
00:8.04 For example, if I don't know what goes in to get details and I hit
00:11.04 cmd+ P or ctrl+ P on Windows and Linux it'll show oh it takes an episode id
00:15.3  Now one thing we didn't do before we could have done,
00:18.86 which have been nice. If we could have put a type,
00:20.68 we did our return type here,
00:21.97 we didn't do the inbound type so we could do an int there and then if
00:26.23 we come back and do this,
00:27.49 It will say oh here's an episode id variable and it's a parameter and it takes
00:32.02 an integer. Well that's pretty good.
00:34.73 But if we look it over like over here for example,
00:37.46 it more formalize things like for example this request get or response raised for status navigate
00:46.66 our view rather quick documentation takes a moment and then it shows you an insane number
00:51.74 of keyword arguments we could pass and then sends a get requests and it tells you
00:58.17 about them and so on and we can go and look at more details.
01:1.84 It also tells you the type of information about them that was the type that has
01:5.66 returned and so on. This is fantastic.
01:9.14 Right Wouldn't it be cool if our own code could have that.
01:12.94 Yes, yes, it would.
01:14.94 And if your code has documentation as in a python doc,
01:18.71 string, it would already have that.
01:20.49 So let's go back here and look at this again.
01:22.37 So if I say view documentation.
01:26.04 I do get the type information that we've added which is fantastic and it's navigable.
01:30.14 I could click on here and go to episode and see what that really is.
01:33.44 I don't know what details mean.
01:35.39 That's kind of weird. Wouldn't it be great if we could go over here and
01:39.36 see more. So we'll hold down command or navigate over there.
01:42.94 We want to create a doc string.
01:44.27 Doc strings in python are basically strings that are not assigned to anything there at the
01:49.1 top. And they start with triple quotes.
01:50.97 So 123 quotes, Notice It Auto Close The three.
01:55.94 Cool. We had enter however,
01:58.54 boom we do this right at the top notice that actually it says all right,
02:2.27 we're going to generate formal doc string information here for you.
02:5.84 So this this will return the episode details for the episode with episode id.
02:12.83 And this will be the idea of the episode as an int and here
02:19.96 this will be the episode details if found otherwise.
02:26.33 None. All right. That all looks pretty decent.
02:29.92 Let's go back here and as for the quick documentation again,
02:36.14 look at that as sweet as that.
02:38.14 So this will return the episode details for the.
02:40.15 Episode with id. Episode id
02:41.7  And it has the parameters,
02:43.71 the idea of the episode as int which is also represented up here and then the
02:49.0 episode details have found really really nice the way that the quick documentation allows you to
02:54.48 navigate. Not just the formal pieces,
02:56.94 like we could also do this for e tree.
02:59.15 Right, This is a built in thing.
03:3.44 Here's the documentation from the standard library and you can actually click on this to get
03:7.38 to it. We also saw that we get it for requests,
03:10.0 but if we write our own documentation,
03:12.12 we get it for our own libraries as well.
03:14.51 And we saw that just the triple quote enter.
03:17.04 Boom, it will generate that for us.
